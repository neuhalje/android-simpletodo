# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in /Users/jens/work/android-sdk-macosx/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the ProGuard
# include property in project.properties.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

###########
# EventBus
# ------------

-keepclassmembers class ** {
    public void onEvent*(**);
}

#With the support lib removed:
# Warning: de.greenrobot.event.util.ErrorDialogFragmentFactory$Support: can't find referenced method 'void setArguments(android.os.Bundle)' in program class de.greenrobot.event.util.ErrorDialogFragments$Support
# Warning: de.greenrobot.event.util.ErrorDialogFragments$Support: can't find referenced method 'android.support.v4.app.FragmentActivity getActivity()' in program class de.greenrobot.event.util.ErrorDialogFragments$Support
# Warning: de.greenrobot.event.util.ErrorDialogFragments$Support: can't find referenced method 'android.os.Bundle getArguments()' in program class de.greenrobot.event.util.ErrorDialogFragments$Support
# Warning: de.greenrobot.event.util.ErrorDialogManager$SupportManagerFragment: can't find referenced method 'android.support.v4.app.FragmentManager getFragmentManager()' in program class de.greenrobot.event.util.ErrorDialogManager$SupportManagerFragment
-dontwarn de.greenrobot.event.util.ErrorDialogFragmentFactory$Support
-dontwarn de.greenrobot.event.util.ErrorDialogFragments$Support
-dontwarn de.greenrobot.event.util.ErrorDialogManager$SupportManagerFragment

################
# Butterknife
# ------------

-dontwarn butterknife.internal.**
-keep class **$$ViewInjector { *; }
-keepnames class * { @butterknife.InjectView *;}


################
# Dagger
# ------------


-keepattributes *Annotation*

-keepclassmembers,allowobfuscation class * {
    @javax.inject.* *;
    @dagger.* *;
    <init>();
}

-keep class **$$ModuleAdapter
-keep class **$$InjectAdapter
-keep class **$$StaticInjection

-keepnames class dagger.Lazy

-dontwarn dagger.internal.codegen.**ï»¿

-keepnames !abstract class name.neuhalfen.*

#############
# Guava
# ------------
-dontwarn sun.misc.Unsafe
-dontwarn com.google.common.collect.MinMaxPriorityQueue

#############
# Scala
# ------------

-keepclassmembers class * { ** MODULE$; }

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
long ctl;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool$WorkQueue {
int runState;
}

-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
scala.concurrent.forkjoin.LinkedTransferQueue$Node head;
scala.concurrent.forkjoin.LinkedTransferQueue$Node tail;
int sweepVotes;
}

-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue$Node {
java.lang.Object item;
scala.concurrent.forkjoin.LinkedTransferQueue$Node next;
java.lang.Thread waiter;
}

-dontnote scala.xml.**
-dontnote scala.concurrent.forkjoin.ForkJoinPool
-dontwarn scala.**
